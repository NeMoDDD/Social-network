{"version":3,"file":"static/js/177.d45d8eac.chunk.js","mappings":"gKACA,OAAgB,QAAU,yBAAyB,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,yB,uCCWhI,EARoB,SAACA,GACjB,OACI,gBAAKC,UAAWC,EAAAA,OAAS,UACrB,SAAC,KAAO,CAACC,GAAI,YAAcH,EAAMI,GAAKH,UAAW,SAAAI,GAAO,OAAIA,EAAQC,SAAWJ,EAAAA,OAAWA,EAAAA,IAAM,EAAC,SAAEF,EAAMO,QAGrH,ECCA,EATgB,SAACP,GACb,OACI,gBAAKC,UAAWC,EAAAA,QAAU,SACrBF,EAAMQ,SAGnB,E,uCC8BMC,GAAcC,EAAAA,EAAAA,GAAiB,IAY/BC,GAAuBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,mBAAjBD,EAXL,SAACZ,GACrB,OACI,kBAAMc,SAAUd,EAAMe,aAAa,WAC/B,SAACC,EAAA,EAAK,CAACC,YAAY,kBAAkBC,UAAWC,EAAAA,GAAUZ,KAAK,iBACxDa,SAAU,CAACC,EAAAA,EAAUZ,MAE5B,4BAAQ,6DAGpB,IAIMa,GAAcZ,EAAAA,EAAAA,GAAiB,IAU/Ba,GAAuBX,EAAAA,EAAAA,GAAU,CAACC,KAAM,kBAAjBD,EATN,SAACZ,GACpB,OACI,kBAAMc,SAAUd,EAAMe,aAAa,WAC/B,SAACC,EAAA,EAAK,CAACE,UAAWM,EAAAA,GAAOjB,KAAK,iBAAiBa,SAAU,CAACC,EAAAA,EAAUC,MACpE,4BAAQ,uDAGpB,IAIA,EAxDgB,SAACtB,GAEb,IAAIyB,EAAkBzB,EAAM0B,QACvBC,KAAI,SAACC,EAAGC,GAAK,OAAK,SAAC,EAAW,CAACtB,KAAMqB,EAAErB,KAAMH,GAAIwB,EAAExB,IAASyB,EAAQ,IAGrEC,EAAmB9B,EAAM+B,SACxBJ,KAAI,SAACK,EAAGH,GAAK,OAAK,SAAC,EAAO,CAACrB,QAASwB,EAAExB,SAAcqB,EAAQ,IAQjE,OACI,4BACI,SAACN,EAAmB,CAACT,SARZ,SAACmB,GACdjC,EAAMkC,WAAWD,EAAOE,eAC5B,KAOQ,iBAAKlC,UAAWC,EAAAA,QAAU,WACtB,gBAAKD,UAAWC,EAAAA,YAAc,SACzBuB,KAEL,iBAAKxB,UAAWC,EAAAA,SAAW,WACvB,yBAAM4B,KACN,SAACnB,EAAoB,CAACG,SAZpB,SAACmB,GACfjC,EAAMoC,YAAYH,EAAOI,eAC7B,YAeJ,E,oBCZA,GAAeC,E,QAAAA,KAAQC,EAAAA,EAAAA,KAdC,SAACC,GACrB,MAAO,CACHd,QAASc,EAAMC,YAAYf,QAC3BK,SAAUS,EAAMC,YAAYV,SAEpC,IAE2B,SAACW,GACxB,MAAO,CACHR,WAAY,SAACC,GAAoBO,GAASC,EAAAA,EAAAA,IAAwBR,GAAgB,EAClFC,YAAa,SAACC,GAAoBK,GAASE,EAAAA,EAAAA,IAAyBP,GAAgB,EAE5F,IAEqEQ,EAAAA,EAArE,CAAuFC,E","sources":["webpack://react-website/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__oe96H\",\"message\":\"Dialogs_message__ZEWo0\",\"dialog\":\"Dialogs_dialog__htSTl\",\"active\":\"Dialogs_active__t8cjl\"};","import s from \"./../Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogsItem = (props) => {\n    return (\n        <div className={s.dialog}>\n            <NavLink to={\"/dialogs/\" + props.id}  className={navData => navData.isActive ? s.active : s.item}>{props.name}</NavLink>\n        </div>\n    )\n}\n\nexport default DialogsItem;\n","import s from \"./../Dialogs.module.css\"\n\nconst Message = (props) => {\n    return (\n        <div className={s.message}>\n            {props.message}\n        </div>\n    )\n}\n\n\nexport default Message;\n","import s from \"./Dialogs.module.css\"\nimport DialogsItem from \"./DialogsItem/DialogsItem\";\nimport Message from \"./Message/Message\";\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\nimport {Input, Textarea} from \"../common/FormsControls/FormsControls\";\n\nconst Dialogs = (props) => {\n\n    let dialogsElements = props.dialogs\n        .map((d, index) => <DialogsItem name={d.name} id={d.id} key={index}/>);\n\n\n    let messagesElements = props.messages\n        .map((m, index) => <Message message={m.message} key={index}/>)\n\n    let addDialogs = (values) => {\n        props.addDialogs(values.newDialogsBody);\n    }\n    let sendMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    }\n    return (\n        <div>\n            <AddDialogsFormRedux onSubmit={addDialogs}/>\n            <div className={s.dialogs}>\n                <div className={s.dialogsItem}>\n                    {dialogsElements}\n                </div>\n                <div className={s.messages}>\n                    <div>{messagesElements}</div>\n                    <SendMessageFormRedux onSubmit={sendMessage}/>\n                </div>\n            </div>\n        </div>\n    )\n}\nconst maxLength50 = maxLengthCreator(50)\nconst sendMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field placeholder=\"Enter a message\" component={Textarea} name=\"newMessageBody\"\n                   validate={[required, maxLength50]}\n            />\n            <button>Отправить</button>\n        </form>\n    )\n}\n\nconst SendMessageFormRedux = reduxForm({form: \"sendMessageForm\"})(sendMessageForm)\n\nconst maxLength15 = maxLengthCreator(15)\nconst addDialogsForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field component={Input} name=\"newDialogsBody\" validate={[required, maxLength15]}/>\n            <button>Добавить</button>\n        </form>\n    )\n}\n\nconst AddDialogsFormRedux  = reduxForm({form: \"addDialogsForm\"})(addDialogsForm)\n\nexport default Dialogs;\n","import s from \"./Dialogs.module.css\"\nimport React from \"react\";\nimport {\n    addDialogsActionCreator,\n    sendMessageActionCreator,\n} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nconst mapStateToProps = (state) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addDialogs: (newDialogsBody) => {dispatch(addDialogsActionCreator(newDialogsBody))},\n        sendMessage: (newMessageBody) => {dispatch(sendMessageActionCreator(newMessageBody))},\n    }\n}\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs)\n"],"names":["props","className","s","to","id","navData","isActive","name","message","maxLength50","maxLengthCreator","SendMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","maxLength15","AddDialogsFormRedux","Input","dialogsElements","dialogs","map","d","index","messagesElements","messages","m","values","addDialogs","newDialogsBody","sendMessage","newMessageBody","compose","connect","state","dialogsPage","dispatch","addDialogsActionCreator","sendMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}